#!/bin/sh

version=0.2.5

install() {
    del_opkg_src
    set_opkg_src
    rm -rf /var/opkg-lists/*
    opkg update
    if [ $? -ne 0 ];then
        return 1
    fi
   
    opkg install shadowsocks-libev-spec
    opkg install redsocks2
    opkg install ChinaDNS

    # web安装界面的参数会保存到文件，这里引用参数文件，即可使用变量
    . ./soho-to-intranet.conf
    sed -e "s/{server}/$server/" -e "s/{server_port}/$server_port/" -e "s/{local_port}/$local_port/" -e "s/{password}/$password/" -e "s/{method}/$method/" config.json > /etc/shadowsocks/config.json
 
    enable
    start

    set_dns

    return 0
}

uninstall() {
    stop
    opkg remove shadowsocks-libev-spec
    opkg remove redsocks2
    opkg remove chinadns
    remove_dns

    return 0
}

start() {
    /etc/init.d/shadowsocks start >/dev/null 2>&1
    /etc/init.d/redsocks2 start >/dev/null 2>&1
    /etc/init.d/chinadns start >/dev/null 2>&1
    return 0
}

stop() {
    /etc/init.d/shadowsocks stop >/dev/null 2>&1
    /etc/init.d/redsocks2 stop >/dev/null 2>&1
    /etc/init.d/chinadns stop >/dev/null 2>&1
    return 0
}

enable() {
    /etc/init.d/shadowsocks enable
    /etc/init.d/redsocks2 enable
    /etc/init.d/chinadns enable
}

status() {
    local stat=running

    pgrep /usr/bin/ss-redir >/dev/null 2>&1
    CODE="$?"

    [ "$CODE" -ne "0" ] && {
        stat=stopped
    }

    echo "{ \"status\" : \"$stat\" }"
    return 0
}

set_dns() {
    grep 'no-resolv' /etc/dnsmasq.conf
    if [ $? -ne 0 ];then
        echo 'no-resolv' >> /etc/dnsmasq.conf
    fi

    grep 'server=127.0.0.1#5353' /etc/dnsmasq.conf
    if [ $? -ne 0 ];then
        echo 'server=127.0.0.1#5353' >> /etc/dnsmasq.conf
    fi

    /etc/init.d/dnsmasq restart

    #使用自定义dns，不要使用运营商dns，会出现dns广告而且有些国内域名都无法解析
    echo "set_dns start"
    uci delete network.wan.dns >/dev/null 2>&1
    uci set network.wan.peerdns=0
    uci add_list network.wan.dns="223.5.5.5"
    uci add_list network.wan.dns="114.114.114.114"
    uci commit
    /etc/init.d/network reload

    #极路由的界面读取tnetwork的配置，所以也设置一下
    uci set tnetwork.@defaults[0].peerdns=0
    uci set tnetwork.@defaults[0].override_dns="223.5.5.5"
    uci set tnetwork.@defaults[0].override_dns2="114.114.114.114"
    echo "set_dns end"
    return 0
}

remove_dns() {
    sed -i '/^no-resolv$/d' /etc/dnsmasq.conf
    sed -i '/^server=127.0.0.1#5353$/d' /etc/dnsmasq.conf
    /etc/init.d/dnsmasq restart
    return $?
}

set_opkg_src() {
    echo "set_opkg_src start"
    tmp=$(grep 'src/gz hiwifiio http://downloads-hiwifi-io.qiniudn.com/hiwifi_os/' /etc/opkg.conf)
    if [ $? -eq 0 ]; then
        return 0
    fi
    arch=$(grep '/upgrade_file/' /etc/opkg.conf | awk '{print $3}' | head -1 | awk -F/ '{print $5}' | awk -F- '{print $1}')
    hiwifiio_src='http://downloads-hiwifi-io.qiniudn.com/hiwifi_os/'$arch'/packages'
    #hiwifi os use /etc/opkg.conf and /etc/opkg.d/*.conf
    echo 'src/gz hiwifiio '$hiwifiio_src >> /etc/opkg.conf
    for one_file in $(find /etc/opkg.d/ -iname '*.conf'); do
        echo 'src/gz hiwifiio '$hiwifiio_src >> $one_file
    done
    echo "set_opkg_src end"
    return 0
}

del_opkg_src() {
    echo "del_opkg_src"
    sed -i '/^src\/gz hiwifiio /d' /etc/opkg.conf
    for one_file in $(find /etc/opkg.d/ -iname '*.conf'); do
        sed -i '/^src\/gz hiwifiio /d' $one_file
    done
    return 0
}
